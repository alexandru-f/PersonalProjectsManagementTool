{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","components/UserManagement/UserProfile.js","components/UserManagement/ForgotPassword.js","components/UserManagement/ResetPassword.js","components/UserManagement/RegisterSuccess.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","overDueTag","updatedField","isUpdated","react_default","createElement","updated_At","notUpdated","isStartDate","start_date","notStartDate","isEndDate","end_date","notEndDate","startEndDate","className","overDueFinalTime","endDateTime","eDate","Date","dateNow","now","timeObj","milliseconds","hour","minute","seconds","Math","floor","day","convertMS","abs","projectIdentifier","projectName","description","created_At","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","clearErrors","logout","_ref9","_callee9","_context9","localStorage","removeItem","_x9","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","onChange","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","nextProps","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","success","passChange","isRecoverPassOk","isPassTokenValid","isResetPassSuccess","passToken","booleanActionPayload","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","deleteProjectTask","priorityString","priorityClass","dueDate","priority","summary","acceptanceCriteria","pt_id","_ref5","_callee5","_context5","_x5","Backlog","tasks","ProjectTasks_ProjectTask","toDoItems","inProgress","doneItems","i","status","ProjectBoard","getBacklog","boardContent","buttonContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","addProjectButton","AddProjectTask","projectTask","createProjectTask","UpdateProjectTask","_this$props$match$par","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","usernameAlreadyExists","Login","loginRequest","login","LoginRequest","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","UserProfile","oldPassword","newPassword","confirmNewPassword","changePassRequest","changePassword","passwordTitle","ForgotPassword","email","clearIsRecoverPassOk","recoverPassword","showOkMessage","_this$props","initialMessage","usernameNotFound","recoverPasswordRequest","_ref6","_callee6","_context6","_x6","ResetPassword","queryString","parse","search","validateToken","passwordObject","resetPassword","_this2","tokenNotFound","tokenExpired","displayAlgorithm","_ref7","_callee7","_context7","_x7","resetPassRequest","_ref8","_callee8","_context8","_x8","RegisterSuccess","jwtToken","decoded_jwtToken","currentTime","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","securityUtils_SecuredRoute","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.65e24eea.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET ERRORS\";\r\nexport const GET_PROJECTS = \"GET PROJECTS\";\r\nexport const GET_PROJECT = \"GET PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE PROJECT\";\r\n\r\n/* Clear errors to get started with a clean component every time */\r\n\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Types for security\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\nexport const GET_SUCCES_PASSCHANGE = \"GET_SUCCESS_PASSCHANGE\";\r\n\r\nexport const RECOVER_PASSWORD_SUCCESS = \"RECOVER_PASSWORD_SUCCESS\";\r\n\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\n\r\nexport const GET_PASS_TOKEN = \"GET_PASS_TOKEN\";\r\n\r\nexport const GET_SUCCESS_RESETPASS = \"GET_SUCCESS_RESETPASS\";","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT\r\n} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  dispatch({\r\n    type: GET_ERRORS,\r\n    payload: {}\r\n  });\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This will delete the project and all the data related to it!\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    function convertMS( milliseconds ) {\r\n      var day, hour, minute, seconds;\r\n      seconds = Math.floor(milliseconds / 1000);\r\n      minute = Math.floor(seconds / 60);\r\n      seconds = seconds % 60;\r\n      hour = Math.floor(minute / 60);\r\n      minute = minute % 60;\r\n      day = Math.floor(hour / 24);\r\n      hour = hour % 24;\r\n      return {\r\n          day: day,\r\n          hour: hour,\r\n          minute: minute,\r\n          seconds: seconds\r\n      };\r\n    }\r\n    const { project } = this.props;\r\n\r\n    const isUpdated = (\r\n      <p>Updated at: <strong>{project.updated_At}</strong></p>\r\n    );\r\n    \r\n    const notUpdated = (\r\n      <p>This project was <strong>never updated</strong></p>\r\n    );\r\n\r\n    const isStartDate = (\r\n      <p>{project.start_date}</p>\r\n    );\r\n    const notStartDate = (\r\n      <p>Start date is not set</p>\r\n    );\r\n    \r\n    const isEndDate = (\r\n      <p>{project.end_date}</p>\r\n    );\r\n\r\n    const notEndDate = (\r\n      <p>End date is not set</p>\r\n    );\r\n\r\n    const startEndDate = (\r\n      <div className=\"container start-end-dates\">\r\n        <div className=\"row\">\r\n        <div className=\"col-6 start-date\">\r\n          <div>Start Date: </div>\r\n          <div>{project.start_date ? isStartDate : notStartDate }</div>\r\n        </div>\r\n        <div className=\"col-6 end-date\">\r\n          <div>End date: </div>\r\n          <div>{project.end_date ? isEndDate : notEndDate }</div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n    let overDueTag;\r\n    let overDueFinalTime = '';\r\n    \r\n    const endDateTime = project.end_date;\r\n    if (endDateTime) {\r\n      const eDate = new Date(endDateTime);\r\n      const dateNow = Date.now();\r\n      if (dateNow > eDate) {\r\n        const timeObj = convertMS(Math.abs(dateNow - eDate));\r\n        overDueFinalTime = timeObj.day + \" day\" + ((timeObj.day>1)?'s':'') +\" \"+ timeObj.hour + \" hour\"+ ((timeObj.hour>1)?'s':'') + \" \" + timeObj.minute + \" minute\" +((timeObj.minute>1)?'s':'');\r\n\r\n        const overDueMessage = (\r\n          <div className=\"container over-due\">\r\n            <div>Warning! <i className=\"fw-400\">Project timing has a delay of </i> {overDueFinalTime}</div>\r\n          </div>\r\n        );\r\n\r\n        overDueTag = overDueMessage;\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n    let updatedField;\r\n    if (project.updated_At) {\r\n      updatedField = isUpdated;\r\n    } else {\r\n      updatedField = notUpdated;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n              <p>Created at: <strong>{project.created_At}</strong></p>\r\n              {updatedField}\r\n              {startEndDate}\r\n              {overDueTag}\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                  <i className=\"fa fa-minus-circle\">Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from 'axios';\r\nimport {SET_CURRENT_USER, GET_ERRORS, GET_SUCCES_PASSCHANGE, RECOVER_PASSWORD_SUCCESS,RESET_PASSWORD_SUCCESS,GET_PASS_TOKEN} from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/register-success\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const clearErrors = () => async dispatch => {\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n    });\r\n}\r\nexport const clearIsRecoverPassOk = () => async dispatch => {\r\n    dispatch({\r\n        type: RESET_PASSWORD_SUCCESS,\r\n        payload: false\r\n    });  \r\n};\r\n\r\n\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n    //post => Login request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    //extract the token from the res.data\r\n    const {token} = res.data;\r\n    //store the token into the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set token in the header\r\n    setJWTToken(token);\r\n    //decode the token on React\r\n    const decoded = jwt_decode(token);\r\n    //dispatch to our securityReducer\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const changePassword = (changePassRequest, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.post(\"/api/users/updatePassword\", changePassRequest);\r\n        dispatch({\r\n            type: GET_SUCCES_PASSCHANGE,\r\n            payload: res.data\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const recoverPassword = (recoverPasswordRequest) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/forgotPassword\", recoverPasswordRequest);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n        dispatch({\r\n            type: RECOVER_PASSWORD_SUCCESS,\r\n            isRecoverPassOk: true\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const validateToken = (token) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/users/resetPassword?token=${token}`);\r\n        dispatch({\r\n            type: GET_PASS_TOKEN,\r\n            payload: res.data\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const resetPassword = (resetPassRequest, token, history) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/users/resetPassword?token=${token}`, resetPassRequest);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });  \r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const {validToken, user} = this.props.security;\r\n    \r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to={`/profile/${user.id}`} className=\"nav-link\">\r\n            <i className=\"fa fa-user-circle mr-1\"><span className=\"pdl-10\">{user.fullName}</span></i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n            Logout \r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Sign up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login \r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    );\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout})(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      errors: errors.start_date\r\n                    })}\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <p>{errors.start_date}</p>\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange.bind(this)}\r\n                  />\r\n                  <p>{errors.end_date}</p>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project => project.projectSequence !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_CURRENT_USER, GET_SUCCES_PASSCHANGE, RECOVER_PASSWORD_SUCCESS, RESET_PASSWORD_SUCCESS, GET_PASS_TOKEN, GET_SUCCESS_RESETPASS} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false,\r\n    success: '',\r\n    passChange: '',\r\n    isRecoverPassOk: false,\r\n    isPassTokenValid: false,\r\n    isResetPassSuccess: false,\r\n    passToken: ''\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            };\r\n        case GET_SUCCES_PASSCHANGE:\r\n            return {\r\n                ...state,\r\n                passChange: action.payload\r\n            };\r\n        case RECOVER_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRecoverPassOk: true\r\n            };\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRecoverPassOk: false\r\n            };\r\n        case GET_PASS_TOKEN:\r\n            return {\r\n                ...state,\r\n                isPassTokenValid: booleanActionPayload(action.payload),\r\n                passToken: action.payload\r\n            };\r\n        case GET_SUCCESS_RESETPASS:\r\n            return {\r\n                ...state,\r\n                isResetPassSuccess: true\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n//Make REDUX to work on Chrome\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleWare),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n  //Make REDUX to work on other browsers\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    //controlled component\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        const { id, projectName, projectIdentifier, description, start_date, end_date } = nextProps.project;\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n        this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.projectName }\r\n                                        )}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.projectIdentifier }\r\n                                        )}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        disabled\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.description }\r\n                                        )}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"start_date\"\r\n                                        value={this.state.start_date || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"end_date\"\r\n                                        value={this.state.end_date || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        project: state.project.project,\r\n        errors: state.errors\r\n    });\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProject, createProject }\r\n)(UpdateProject);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick = (backlog_id, id) => {\r\n        this.props.deleteProjectTask(backlog_id, id);\r\n    };\r\n\r\n    render() {\r\n        const { project_task } = this.props;\r\n\r\n        /* Calculate the overdue */\r\n\r\n        \r\n        const endDateTime = project_task.dueDate;\r\n        let overDueFinalTime = '';\r\n        let overDueTag;\r\n        if (endDateTime) {\r\n            const eDate = new Date(endDateTime);\r\n            const dateNow = Date.now();\r\n\r\n            if (dateNow > eDate) {\r\n              const timeObj = convertMS(Math.abs(dateNow - eDate));\r\n              overDueFinalTime = timeObj.day + \" day\" + ((timeObj.day>1)?'s':'') +\" \"+ timeObj.hour + \" hour\"+ ((timeObj.hour>1)?'s':'') + \" \" + timeObj.minute + \" minute\" +((timeObj.minute>1)?'s':'');\r\n      \r\n              const overDueMessage = (\r\n                <div className=\"container over-due overdue-project\">\r\n                  <div>Warning! <i className=\"fw-400\">Task timing has a delay of </i> {overDueFinalTime}</div>\r\n                </div>\r\n              );\r\n      \r\n              overDueTag = overDueMessage;\r\n      \r\n            }\r\n          }\r\n\r\n        /* Set Priority String */\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\";\r\n        }\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\";\r\n        }\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\";\r\n        }\r\n    \r\n        function convertMS( milliseconds ) {\r\n            var day, hour, minute, seconds;\r\n            seconds = Math.floor(milliseconds / 1000);\r\n            minute = Math.floor(seconds / 60);\r\n            seconds = seconds % 60;\r\n            hour = Math.floor(minute / 60);\r\n            minute = minute % 60;\r\n            day = Math.floor(hour / 24);\r\n            hour = hour % 24;\r\n            return {\r\n                day: day,\r\n                hour: hour,\r\n                minute: minute,\r\n                seconds: seconds\r\n            };\r\n        }\r\n\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card mb-1 bg-light project-task\">\r\n                    <div className={`card-header text-primary ${priorityClass}`}>\r\n                        <table>\r\n                            <tbody>\r\n                            <tr>\r\n                            <td>Task name:</td> \r\n                            <td><strong>{project_task.summary}</strong><br /></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td>Priority:</td> \r\n                            <td><strong>{priorityString}</strong><br /></td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"card-body bg-light\">\r\n                        <h5 className=\"card-title\">Task description: </h5>\r\n                        <p className=\"card-text text-truncate \">\r\n                            {project_task.acceptanceCriteria}\r\n                        </p>\r\n                        <h5 className=\"card-title\">Task details: </h5>\r\n                        <p className=\"start-date\"><strong>Due date: {project_task.dueDate}</strong></p>\r\n                        {overDueTag}\r\n                        <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-light\">\r\n                            View / Update\r\n                        </Link>\r\n                        <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { deleteProjectTask }\r\n)(ProjectTask);\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS, GET_PROJECT, GET_BACKLOG, DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const createProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\n// export const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n//     try {\r\n//         const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n//         dispatch({\r\n//             type: GET_PROJECT,\r\n//             payload: res.data\r\n//         });\r\n//     } catch (error) {\r\n//         history.push(`/projectBoard/${id}`)\r\n//     }\r\n// };\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n        // dispatch({\r\n        //     type: GET_ERRORS,\r\n        //     payload: {}\r\n        // });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, projectTask, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, projectTask);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n    if (window.confirm(\"Are you sure? This will delete the project task!\")) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n\r\nclass Backlog extends Component {\r\n\r\n    render() {\r\n        const { project_tasks } = this.props;\r\n        const tasks = project_tasks.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let toDoItems = [];\r\n        let inProgress = [];\r\n        let doneItems = [];\r\n        for (let i = 0;i < tasks.length;i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                toDoItems.push(tasks[i]);\r\n            }\r\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgress.push(tasks[i]);\r\n            }\r\n            if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {toDoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgress}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Backlog;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from '../../actions/backlogActions';\r\nclass ProjectBoard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let boardContent;\r\n        let buttonContent;\r\n\r\n        const addProjectButton = (errors) => {\r\n            if (errors.projectNotFound) {\r\n                return null;\r\n            } else {\r\n                return (\r\n                    <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                        <i className=\"fa fa-plus-circle\">Create Project Task</i>\r\n                    </Link>\r\n                );\r\n            }\r\n        };\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFound) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            No Project Tasks on this board\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                return (\r\n                    <Backlog project_tasks={project_tasks} />\r\n                );\r\n            }\r\n        }\r\n        boardContent = boardAlgorithm(errors, project_tasks);\r\n        buttonContent = addProjectButton(errors);\r\n        return (\r\n            <div className=\"container\">\r\n                {buttonContent}\r\n                <br />\r\n                <hr />\r\n                {boardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { createProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nclass AddProjectTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { id } = this.props.match.params;\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            dueDate: \"\",\r\n            priority: 0,\r\n            status: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const projectTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            dueDate: this.state.dueDate,\r\n            priority: this.state.priority,\r\n            status: this.state.status,\r\n        };\r\n        this.props.createProjectTask(this.state.projectIdentifier, projectTask, this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nAddProjectTask.propTypes = {\r\n    createProjectTask: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProjectTask })(AddProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: null,\r\n            projectIdentifier: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        const { id, projectSequence, summary, acceptanceCriteria, status, priority, dueDate, projectIdentifier } = nextProps.project;\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        const { backlog_id, id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, id, this.props.history);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier\r\n        };\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, newProject, this.props.history);\r\n    }\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { backlog_id } = this.props.match.params;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.summary }\r\n                                        )}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Description\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps) (Landing);","import React, {Component} from 'react';\r\nimport { createNewUser, clearErrors } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if (this.props.errors) {\r\n            this.props.clearErrors();\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const {errors} = this.props;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.fullName})} placeholder=\"Full name\" name=\"fullName\"\r\n                                        value={this.state.fullName} \r\n                                        onChange={this.onChange}\r\n                                        />\r\n                                    {\r\n                                        errors.fullName && (<div className=\"invalid-feedback\">{errors.fullName}</div>)\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.username|| errors.usernameAlreadyExists})}  placeholder=\"Email Address\" name=\"username\" value={this.state.username} onChange={this.onChange}/>\r\n                                    {\r\n                                        (errors.username || errors.usernameAlreadyExists) && (<div className=\"invalid-feedback\">{errors.username || errors.usernameAlreadyExists}</div>)\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.password})} placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                                    {\r\n                                        errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.confirmPassword})} placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                           {\r\n                                        errors.confirmPassword && (<div className=\"invalid-feedback\">{errors.confirmPassword}</div>)\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\nexport default connect(mapStateToProps, {createNewUser, clearErrors})(Register);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {login, clearErrors} from '../../actions/securityActions';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if  (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if (this.props.errors) {\r\n            this.props.clearErrors();\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.login(loginRequest, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.props;\r\n        return (\r\n        <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit = {this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.username})} \r\n                                placeholder=\"Email Address\" \r\n                                name=\"username\" \r\n                                value = {this.state.username}\r\n                                onChange = {this.onChange}\r\n                                />\r\n                                {\r\n                                    errors && (<div className=\"invalid-feedback\">{errors.username}</div>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.password})} \r\n                                placeholder=\"Password\" \r\n                                name=\"password\" \r\n                                value = {this.state.password}\r\n                                onChange = {this.onChange}\r\n                                />\r\n                                {\r\n                                    errors && (<div className=\"invalid-feedback\">{errors.password}</div>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"forgot-password\">\r\n                                <Link to=\"/forgotPassword\">Forgot password?</Link>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, {login, clearErrors})(Login);","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\r\n    <Route \r\n        {...otherProps}\r\n        render={    \r\n            props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\"/>\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect (mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { changePassword } from '../../actions/securityActions';\r\n\r\n\r\nclass UserProfile extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            oldPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmNewPassword: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const changePassRequest = {\r\n            oldPassword: this.state.oldPassword,\r\n            newPassword: this.state.newPassword,\r\n            confirmNewPassword: this.state.confirmNewPassword\r\n        };\r\n        this.props.changePassword(changePassRequest, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const {user, passChange} = this.props.security;\r\n        const {errors} = this.props;\r\n\r\n        let passwordTitle;\r\n        \r\n        if (passChange) {\r\n            passwordTitle = (\r\n                <div className=\"password-success text-center\">{passChange + '!'}</div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"account-page\">\r\n                 <div className=\"container\">\r\n                    <div className=\"account-wrapper\">\r\n                    <h1>Account overview</h1>\r\n                   <div className=\"card card-body bg-light mb-3 well\">\r\n                    <h3>Profile</h3>\r\n                        <h4>User Id: </h4>\r\n                        <p>{user.id}</p>\r\n                        <h4>Full name: </h4>\r\n                        <p>{user.fullName}</p>\r\n                        <h4>Email/Username:</h4>\r\n                        <p>{user.username}</p>\r\n                        <div className=\"forgot-password\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 m-auto\">\r\n                                        <h1 className=\"display-4 text-center\">Change Password</h1>\r\n                                        <form onSubmit = {this.onSubmit}>\r\n                                            <div className=\"form-group\">\r\n                                            <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.oldPassword})} placeholder=\"Old password\" name=\"oldPassword\"\r\n                                                value={this.state.oldPassword} \r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                                {\r\n                                                    errors && (<div className=\"invalid-feedback\">{errors.oldPassword}</div>)\r\n                                                }   \r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                            <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.newPassword})} placeholder=\"New password\" name=\"newPassword\"\r\n                                                value={this.state.newPassword} \r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                                     {\r\n                                                    errors && (<div className=\"invalid-feedback\">{errors.newPassword}</div>)\r\n                                                }   \r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                            <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.confirmNewPassword})} placeholder=\"Confirm new password\" name=\"confirmNewPassword\"\r\n                                                value={this.state.confirmNewPassword} \r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                                     {\r\n                                                    errors && (<div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>)\r\n                                                }   \r\n                                            </div>\r\n                                            {passwordTitle}\r\n                                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                   </div>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserProfile.propTypes = {\r\n    security: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    changePassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {changePassword})(UserProfile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {recoverPassword, clearIsRecoverPassOk} from '../../actions/securityActions';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            errors: {}\r\n        };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    \r\n    //\"Check your email for a link to reset your password. If it doesn’t appear within a few minutes, check your spam folder.\"\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.clearIsRecoverPassOk();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginRequest = {\r\n            email: this.state.email,\r\n        };\r\n        this.props.recoverPassword(loginRequest);\r\n    }\r\n\r\n    render() {\r\n        const {errors, isRecoverPassOk } = this.props;\r\n\r\n        let initialMessage = (\r\n            <div>\r\n                <p>Enter your email address and we will send you a link to reset your password.</p>\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": (errors.email || errors.usernameNotFound )})} \r\n                            placeholder=\"Enter your email address\" \r\n                            name=\"email\" \r\n                            value = {this.state.email}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {\r\n                                (errors) && (<div className=\"invalid-feedback\">{(errors.email || errors.usernameNotFound)}</div>)\r\n                            }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n            </div>\r\n        );\r\n\r\n        let showOkMessage;\r\n\r\n        if (isRecoverPassOk) {\r\n            showOkMessage = (\r\n                <div className=\"auth-form-body mt-3\">\r\n                    <h3>Check your email for a link to reset your password.</h3>\r\n                    <Link className=\"btn btn-info btn-block mt-4\" to=\"/login\">Return to login</Link>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center mb-4\">Reset your password</h1>\r\n                        {isRecoverPassOk ? showOkMessage : initialMessage}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n    errors: PropTypes.object.isRequired,\r\n    recoverPassword: PropTypes.func.isRequired,\r\n    isRecoverPassOk: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    isRecoverPassOk: state.security.isRecoverPassOk\r\n});\r\n\r\nexport default connect (mapStateToProps, {recoverPassword, clearIsRecoverPassOk})(ForgotPassword);","import React, { Component } from 'react';\r\nimport queryString from 'query-string';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {validateToken, resetPassword} from '../../actions/securityActions';\r\nimport classnames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass ResetPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            newPassword: '',\r\n            confirmNewPassword: ''\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const queryValues = queryString.parse(this.props.location.search);\r\n        const token = queryValues.token;\r\n        this.props.validateToken(token);\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const passwordObject = {\r\n            newPassword: this.state.newPassword,\r\n            confirmNewPassword: this.state.confirmNewPassword\r\n        }\r\n\r\n        const queryValues = queryString.parse(this.props.location.search);\r\n        const token = queryValues.token;\r\n        this.props.resetPassword(passwordObject, token, this.props.history);\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const {isPassTokenValid, errors} = this.props;\r\n        \r\n\r\n        let boardContent;\r\n\r\n        const displayAlgorithm = isPassTokenValid => {\r\n            if (isPassTokenValid) {\r\n                boardContent = (\r\n                    <div className=\"mgt-4\">\r\n                          <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })}\r\n                                        name=\"newPassword\"\r\n                                        placeholder=\"Enter your password\"\r\n                                        value={this.state.newPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Confirm new password\"\r\n                                        name=\"confirmNewPassword\"\r\n                                        value={this.state.confirmNewPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                    </div>\r\n                );\r\n            } else {\r\n                boardContent = (\r\n                    <div>\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.tokenNotFound || errors.tokenExpired}\r\n                        </div>\r\n                        <Link to=\"/forgotPassword\" className=\"btn btn-info center-inline-btn\">Click to retry password recovery</Link>\r\n                    </div>\r\n                );\r\n            }\r\n        };\r\n        displayAlgorithm(isPassTokenValid);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center mb-4\">Reset your password</h1>\r\n                        {boardContent}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n    errors: PropTypes.object.isRequired,\r\n    validateToken: PropTypes.func.isRequired,\r\n    resetPassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    isPassTokenValid: state.security.isPassTokenValid\r\n});\r\n\r\nexport default connect(mapStateToProps, {validateToken, resetPassword})(ResetPassword);","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass RegisterSuccess extends Component {\r\n    // componentDidMount() {\r\n    //     if(this.props.security.validToken) {\r\n    //         this.props.history.push(\"/dashboard\");\r\n    //     }\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">You have been successfully registered!</h1>\r\n                                <p className=\"lead\">\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n// Landing.propTypes = {\r\n//     security: PropTypes.object.isRequired\r\n// }\r\n\r\n// const mapStateToProps = state => ({\r\n//     security: state.security\r\n// });\r\n\r\nexport default RegisterSuccess;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from './components/UserManagement/Register';\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\nimport UserProfile from \"./components/UserManagement/UserProfile\";\nimport ForgotPassword from \"./components/UserManagement/ForgotPassword\";\nimport ResetPassword from \"./components/UserManagement/ResetPassword\";\nimport RegisterSuccess from \"./components/UserManagement/RegisterSuccess\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now()/1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href=\"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/register-success\" component={RegisterSuccess} />\n            <Route exact path = \"/login\" component = {Login}/>\n            <Route exact path=\"/forgotPassword\" component = {ForgotPassword} />\n            <Route path =\"/resetPassword\" component={ResetPassword} />\n            {\n              //Private Routes\n            }\n           <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecuredRoute exact path=\"/addprojectTask/:id\" component={AddProjectTask} />\n              <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:id\" component={UpdateProjectTask} />\n              <SecuredRoute exact path=\"/profile/:id\" component={UserProfile} />\n           </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nregisterServiceWorker();"],"sourceRoot":""}