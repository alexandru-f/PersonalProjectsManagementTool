{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["GET_ERRORS","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","this","_x","apply","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","Link","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","_ref3","_callee3","_context3","localStorage","removeItem","_x3","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","nextProps","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","disabled","ProjectTask","backlog_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","pt_id","_ref5","_callee5","_context5","_x5","Backlog","tasks","ProjectTasks_ProjectTask","toDoItems","inProgress","doneItems","i","status","ProjectBoard","getBacklog","boardContent","buttonContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","addProjectButton","AddProjectTask","dueDate","projectTask","createProjectTask","UpdateProjectTask","_this$props$match$par","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","loginRequest","login","LoginRequest","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","Layout_Header","exact","path","Switch","securityUtils_SecuredRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa16432d.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET ERRORS\";\r\nexport const GET_PROJECTS = \"GET PROJECTS\";\r\nexport const GET_PROJECT = \"GET PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE PROJECT\";\r\n\r\n/* Clear errors to get started with a clean component every time */\r\n\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//Types for security\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT\r\n} from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  dispatch({\r\n    type: GET_ERRORS,\r\n    payload: {}\r\n  });\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (window.confirm(\"Are you sure? This will delete the project and all the data related to it!\")) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                  <i className=\"fa fa-minus-circle\">Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from 'axios';\r\nimport {SET_CURRENT_USER, GET_ERRORS } from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n    //post => Login request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    //extract the token from the res.data\r\n    const {token} = res.data;\r\n    //store the token into the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    //set token in the header\r\n    setJWTToken(token);\r\n    //decode the token on React\r\n    const decoded = jwt_decode(token);\r\n    //dispatch to our securityReducer\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });  \r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const {validToken, user} = this.props.security;\r\n    \r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/dashboard\" className=\"nav-link\">\r\n            <i className=\"fas fa-user-circle mr-1\">{user.fullName}</i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n            Logout \r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/register\" className=\"nav-link\">\r\n            Sign up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login \r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    );\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout})(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  //Life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      errors: errors.start_date\r\n                    })}\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <p>{errors.start_date}</p>\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange.bind(this)}\r\n                  />\r\n                  <p>{errors.end_date}</p>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS, CLEAR_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    case CLEAR_ERROR:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project => project.projectSequence !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_CURRENT_USER} from '../actions/types';\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n//Make REDUX to work on Chrome\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleWare),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n  //Make REDUX to work on other browsers\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from 'react'\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    //controlled component\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        const { id, projectName, projectIdentifier, description, start_date, end_date } = nextProps.project;\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n        this.props.createProject(newProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.projectName }\r\n                                        )}\r\n                                        placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.projectIdentifier }\r\n                                        )}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        disabled\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.description }\r\n                                        )}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )}\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"start_date\"\r\n                                        value={this.state.start_date || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"end_date\"\r\n                                        value={this.state.end_date || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        project: state.project.project,\r\n        errors: state.errors\r\n    });\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProject, createProject }\r\n)(UpdateProject);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick = (backlog_id, id) => {\r\n        this.props.deleteProjectTask(backlog_id, id);\r\n    };\r\n\r\n    render() {\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\";\r\n        }\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\";\r\n        }\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card mb-1 bg-light\">\r\n                    <div className={`card-header text-primary ${priorityClass}`}>\r\n                        ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                    </div>\r\n                    <div className=\"card-body bg-light\">\r\n                        <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                        <p className=\"card-text text-truncate \">\r\n                            {project_task.acceptanceCriteria}\r\n                        </p>\r\n                        <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-light\">\r\n                            View / Update\r\n                        </Link>\r\n                        <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { deleteProjectTask }\r\n)(ProjectTask);\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS, GET_PROJECT, GET_BACKLOG, DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\nexport const createProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\n// export const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n//     try {\r\n//         const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n//         dispatch({\r\n//             type: GET_PROJECT,\r\n//             payload: res.data\r\n//         });\r\n//     } catch (error) {\r\n//         history.push(`/projectBoard/${id}`)\r\n//     }\r\n// };\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n        // dispatch({\r\n        //     type: GET_ERRORS,\r\n        //     payload: {}\r\n        // });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, projectTask, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, projectTask);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n    if (window.confirm(\"Are you sure? This will delete the project task!\")) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n\r\nclass Backlog extends Component {\r\n\r\n    render() {\r\n        const { project_tasks } = this.props;\r\n        const tasks = project_tasks.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let toDoItems = [];\r\n        let inProgress = [];\r\n        let doneItems = [];\r\n        for (let i = 0;i < tasks.length;i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                toDoItems.push(tasks[i]);\r\n            }\r\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgress.push(tasks[i]);\r\n            }\r\n            if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {toDoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgress}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Backlog;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from '../../actions/backlogActions';\r\nclass ProjectBoard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let boardContent;\r\n        let buttonContent;\r\n\r\n        const addProjectButton = (errors) => {\r\n            if (errors.projectNotFound) {\r\n                return null;\r\n            } else {\r\n                return (\r\n                    <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                        <i className=\"fas fa-plus-circle\">Create Project Task</i>\r\n                    </Link>\r\n                );\r\n            }\r\n        };\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFound) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFound}\r\n                        </div>\r\n                    );\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                }\r\n                else {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            No Project Tasks on this board\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                return (\r\n                    <Backlog project_tasks={project_tasks} />\r\n                );\r\n            }\r\n        }\r\n        boardContent = boardAlgorithm(errors, project_tasks);\r\n        buttonContent = addProjectButton(errors);\r\n        return (\r\n            <div className=\"container\">\r\n                {buttonContent}\r\n                <br />\r\n                <hr />\r\n                {boardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { createProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nclass AddProjectTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { id } = this.props.match.params;\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            dueDate: \"\",\r\n            priority: 0,\r\n            status: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const projectTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            dueDate: this.state.dueDate,\r\n            priority: this.state.priority,\r\n            status: this.state.status,\r\n        };\r\n        this.props.createProjectTask(this.state.projectIdentifier, projectTask, this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nAddProjectTask.propTypes = {\r\n    createProjectTask: PropTypes.func.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProjectTask })(AddProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: null,\r\n            projectIdentifier: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n        const { id, projectSequence, summary, acceptanceCriteria, status, priority, dueDate, projectIdentifier } = nextProps.project;\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        const { backlog_id, id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, id, this.props.history);\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier\r\n        };\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, newProject, this.props.history);\r\n    }\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { backlog_id } = this.props.match.params;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            { \"is-invalid\": errors.summary }\r\n                                        )}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate || \"\"}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                                </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                                </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps) (Landing);","import React, {Component} from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword\r\n        };\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        const {errors} = this.props;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.fullName})} placeholder=\"Full name\" name=\"fullName\"\r\n                                        value={this.state.fullName} \r\n                                        onChange={this.onChange}\r\n                                        />\r\n                                    {\r\n                                        errors && (<div className=\"invalid-feedback\">{errors.fullName}</div>)\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.username})}  placeholder=\"Email Address\" name=\"username\" value={this.state.username} onChange={this.onChange}/>\r\n                                    {\r\n                                        errors && (<div className=\"invalid-feedback\">{errors.username}</div>)\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.password})} placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                                    {\r\n                                        errors && (<div className=\"invalid-feedback\">{errors.password}</div>)\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.confirmPassword})} placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" value={this.state.confirmPassword} onChange={this.onChange} />\r\n                                           {\r\n                                        errors && (<div className=\"invalid-feedback\">{errors.confirmPassword}</div>)\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\nexport default connect(mapStateToProps, {createNewUser})(Register);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {login} from '../../actions/securityActions';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.login(loginRequest, this.props.history);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n        if(nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.props;\r\n        return (\r\n        <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit = {this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.username})} \r\n                                placeholder=\"Email Address\" \r\n                                name=\"username\" \r\n                                value = {this.state.username}\r\n                                onChange = {this.onChange}\r\n                                />\r\n                                {\r\n                                    errors && (<div className=\"invalid-feedback\">{errors.username}</div>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.password})} \r\n                                placeholder=\"Password\" \r\n                                name=\"password\" \r\n                                value = {this.state.password}\r\n                                onChange = {this.onChange}\r\n                                />\r\n                                {\r\n                                    errors && (<div className=\"invalid-feedback\">{errors.password}</div>)\r\n                                }\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecuredRoute = ({component: Component, security, ...otherProps}) => (\r\n    <Route \r\n        {...otherProps}\r\n        render={\r\n            props =>\r\n            security.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\"/>\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect (mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from './components/UserManagement/Register';\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now()/1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href=\"/\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path = \"/login\" component = {Login}/>\n            {\n              //Private Routes\n            }\n           <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecuredRoute exact path=\"/addprojectTask/:id\" component={AddProjectTask} />\n              <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:id\" component={UpdateProjectTask} />\n           </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}